<<<<<<< HEAD
first_date_w_2020 <- ymd("2020-01-04")
dates_w2 <- dates_w %>%
bind_rows(tibble(Date = first_date_w_2020 + 7 * seq(0, 52, 1)))
weeks2 <- bind_cols(dates_w2, weeks) %>%
mutate(t = 1:n())
# Quebec data
qc2 <- qc %>%
gather(-Year, -Age, key = "Week", value = "Deaths") %>%
mutate(Age = str_sub(Age, 1, 2),
Age = case_when(Age == "0-" ~ "0",
Age == "To" ~ "All",
TRUE ~ Age),
Deaths = as.integer(str_replace(Deaths, " ", "")),
Year = as.integer(Year),
Week = as.integer(Week),
Region = "Quebec_isq",
Sex = "b") %>%
arrange(Age, Year, Week) %>%
drop_na() %>%
left_join(weeks2)
deaths3 <- deaths2 %>%
left_join(weeks2)
deaths_all <- bind_rows(deaths3, qc2)
unique(deaths_all$Region)
# adjusting population data
###########################
age_excls <- c("18 years and over",
"65 years and over",
"90 years and over",
"Median age",
"Average age")
pop2 <- pop %>%
rename(Region = GEO,
Year = REF_DATE,
Age = 'Age group',
Exposure = VALUE) %>%
select(Region, Year, Age, Sex, Exposure) %>%
filter(!str_detect(Age, " to "),
!(Age %in% age_excls),
Year >= 2009) %>%
mutate(Age = str_remove_all(Age, c(" years and over| years| year")),
Age = ifelse(Age == "All ages", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Exposure = as.integer(Exposure),
Year = as.integer(Year),
Week = 26) %>%
left_join(weeks2) %>%
mutate(t = ifelse(Year == 2009, -26, t))
# population weekly interpolation
ages <- unique(pop2$Age)
rgs <- unique(pop2$Region)
rgs <- c("British Columbia", "Alberta", "Canada", "Ontario", "Quebec")
# adjusting population data
###########################
age_excls <- c("18 years and over",
"65 years and over",
"90 years and over",
"Median age",
"Average age")
pop2 <- pop %>%
rename(Region = GEO,
Year = REF_DATE,
Age = 'Age group',
Exposure = VALUE) %>%
select(Region, Year, Age, Sex, Exposure) %>%
filter(!str_detect(Age, " to "),
!(Age %in% age_excls),
Year >= 2009) %>%
mutate(Age = str_remove_all(Age, c(" years and over| years| year")),
Age = ifelse(Age == "All ages", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Exposure = as.integer(Exposure),
Year = as.integer(Year),
Week = 26) %>%
left_join(weeks2) %>%
mutate(t = ifelse(Year == 2009, -26, t))
# population weekly interpolation
ages <- unique(pop2$Age)
rgs <- unique(pop2$Region)
rgs <- c("British Columbia", "Alberta", "Canada", "Ontario", "Quebec")
# r <- "Canada"
# s <- "f"
# a <- "50"
inters_pop <- NULL
=======
<<<<<<< HEAD
fill = "transparent",
size = 0.3,
linetype="solid")
)
col_country <- c("Other Prairies" = "#666666",
"Canada" = "black",
"Alberta" = "#66a61e",
"Atlantic" = "#e6ab02",
"British Columbia" = "#d95f02",
"Territories" = "#1b9e77",
"Quebec" = "#1E8FCC",
"Ontario" = "#e7298a")
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under, col = Region))+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
scale_colour_manual(values = col_country)+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
legend.text=element_text(size=tx-2),
legend.title=element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under, col = Region))+
geom_point(aes(Age, under_l, col = Region), alpha = 0.4)+
geom_point(aes(Age, under_u, col = Region), alpha = 0.4)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
scale_colour_manual(values = col_country)+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
legend.text=element_text(size=tx-2),
legend.title=element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under))+
geom_point(aes(Age, under_l), alpha = 0.4)+
geom_point(aes(Age, under_u), alpha = 0.4)+
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under))+
geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
ggsave("Figures/underest_infections.png", width = 5, height = 4.5)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under))+
geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(ymin=under_l, ymax=under_u), colour="black", width=.1, position=pd) +
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under))+
geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(ymin=under_l, ymax=under_u), colour="black", width=.1) +
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under))+
geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(ymin=under_l, ymax=under_u), colour="black", width=.1) +
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under))+
geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(Age, under, ymin=under_l, ymax=under_u), colour="black", width=.1) +
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
# geom_point(aes(Age, under))+
# geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
# geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(Age, under, ymin=under_l, ymax=under_u), colour="black", width=.1)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
# geom_point(aes(Age, under))+
# geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
# geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(Age, under, ymin=under_l, ymax=under_u), colour="black", width=.1) +
facet_wrap(~ Region)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
# geom_point(aes(Age, under))+
# geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
# geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(Age, under, ymin=under_l, ymax=under_u), colour="black", width=.5) +
facet_wrap(~ Region)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
# geom_point(aes(Age, under))+
# geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
# geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(Age, under, ymin=under_l, ymax=under_u), colour="black", width=.5) +
facet_wrap(~ Region)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
# geom_point(aes(Age, under))+
# geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
# geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(Age, under, ymin=under_l, ymax=under_u), colour="black", width=.5) +
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under))+
# geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
# geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(Age, under, ymin=under_l, ymax=under_u), colour="black", width=.5) +
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
db_infs %>%
filter(Sex == "b") %>%
ggplot()+
geom_point(aes(Age, under))+
# geom_point(aes(Age, under_l), alpha = 0.4, shape = 24)+
# geom_point(aes(Age, under_u), alpha = 0.4, shape = 25)+
geom_errorbar(aes(Age, under, ymin=under_l, ymax=under_u), colour="black", width=.1) +
facet_wrap(~ Region)+
geom_hline(yintercept = 1, linetype = "dashed")+
scale_y_log10(breaks = c(0.1, 0.25, 0.5, 1, 2), labels = percent_format(accuracy = 1L))+
scale_x_continuous(breaks = seq(0, 100, 10))+
labs(title = "Identified COVID infections by age")+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(5,5,5,5,"mm"),
plot.title = element_text(size=tx-1),
axis.text.x = element_text(size=tx),
axis.text.y = element_text(size=tx-2),
axis.title.x = element_text(size=tx-1),
axis.title.y = element_text(size=tx-1),
strip.text.x = element_text(size = 8),
strip.background = element_rect(color = "black",
fill = "transparent",
size = 0.3,
linetype="solid")
)
ggsave("Figures/underest_infections.png", width = 5, height = 4.5)
rm(list=ls())
Sys.setenv(LANG = "en")
Sys.setlocale("LC_ALL","English")
library(tidyverse)
library(lubridate)
library(readxl)
source("Code/00_functions.R")
deaths <- read_csv("Data/201113_13100768-eng.zip")
View(deaths)
deaths <- read_csv("Data/201113_13100768-eng.zip",
col_types = cols(.default = "c")
)
View(deaths)
pop <- read_csv("Data/17100005-eng.zip")
pop <- read_csv("Data/17100005-eng.zip",
col_types = cols(.default = "c"))
View(pop)
deaths2 <- deaths %>%
rename(Region = GEO,
Date = REF_DATE,
Age = 'Age at time of death',
Deaths = VALUE) %>%
select(Region, Date, Age, Sex, Deaths) %>%
mutate(Region = str_remove(Region, ", place of occurrence"),
Age = str_remove(Age, "Age at time of death, "),
Age = str_trim(str_sub(Age, 1, 2)),
Age = ifelse(Age == "al", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Year = year(Date))
View(deaths2)
unique(deaths2$Age)
unique(deaths2$Region)
r <- "Alberta"
a <- "85"
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()+
geom_line(aes(Date, Deaths))
r <- "Alberta"
a <- "85"
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()+
geom_line(aes(Date, Deaths))
deaths2
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()
deaths2
deaths2 <- deaths %>%
rename(Region = GEO,
Date = REF_DATE,
Age = 'Age at time of death',
Deaths = VALUE) %>%
select(Region, Date, Age, Sex, Deaths) %>%
mutate(Region = str_remove(Region, ", place of occurrence"),
Date = ymd(Date)
Age = str_remove(Age, "Age at time of death, "),
Age = str_trim(str_sub(Age, 1, 2)),
Age = ifelse(Age == "al", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Year = year(Date))
deaths2 <- deaths %>%
rename(Region = GEO,
Date = REF_DATE,
Age = 'Age at time of death',
Deaths = VALUE) %>%
select(Region, Date, Age, Sex, Deaths) %>%
mutate(Region = str_remove(Region, ", place of occurrence"),
Date = ymd(Date),
Age = str_remove(Age, "Age at time of death, "),
Age = str_trim(str_sub(Age, 1, 2)),
Age = ifelse(Age == "al", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Year = year(Date))
unique(deaths2$Age)
unique(deaths2$Region)
r <- "Alberta"
a <- "85"
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()+
geom_line(aes(Date, Deaths))
r <- "Alberta"
a <- "85"
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()+
geom_line(aes(Date, Deaths))
deaths2 <- deaths %>%
rename(Region = GEO,
Date = REF_DATE,
Age = 'Age at time of death',
Deaths = VALUE) %>%
select(Region, Date, Age, Sex, Deaths) %>%
mutate(Region = str_remove(Region, ", place of occurrence"),
Date = ymd(Date),
Age = str_remove(Age, "Age at time of death, "),
Age = str_trim(str_sub(Age, 1, 2)),
Age = ifelse(Age == "al", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Year = year(Date),
Deaths = as_integer(Deaths))
deaths2 <- deaths %>%
rename(Region = GEO,
Date = REF_DATE,
Age = 'Age at time of death',
Deaths = VALUE) %>%
select(Region, Date, Age, Sex, Deaths) %>%
mutate(Region = str_remove(Region, ", place of occurrence"),
Date = ymd(Date),
Age = str_remove(Age, "Age at time of death, "),
Age = str_trim(str_sub(Age, 1, 2)),
Age = ifelse(Age == "al", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Year = year(Date),
Deaths = as.integer(Deaths))
unique(deaths2$Age)
unique(deaths2$Region)
r <- "Alberta"
a <- "85"
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()+
geom_line(aes(Date, Deaths))
r <- "Ontario"
a <- "85"
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()+
geom_line(aes(Date, Deaths))
r <- "Quebec"
a <- "85"
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()+
geom_line(aes(Date, Deaths))
=======
pkgs <- c("tidyverse",
"lubridate",
"haven",
"readxl",
"stats",
"splines",
"MASS",
"gnm",
'doParallel',
'foreach')
# install.packages("doParallel")
lapply(pkgs, require, character.only = T)
select <- dplyr::select
registerDoParallel(cores = 4)
source("Code/00_functions.R")
# reading mortality and population data from StatCan files
db <- read_rds("Output/weekly_canada.rds")
# database for baseline estimation
db2 <- db %>%
mutate(Deaths = Deaths + 1) %>%
group_by(Year, Region, Age, Sex) %>%
mutate(Week = 1:n()) %>%
ungroup() %>%
arrange(Region, Age, Sex, Year) %>%
group_by(Region, Age, Sex) %>%
mutate(t = 1:n()) %>%
ungroup() %>%
mutate(sn52 = sin((2*pi*t)/(52)),
cs52 = cos((2*pi*t)/(52)),
# excluding winter (wks 46-14), summer (wks 27-35), 2009 and COVID-19 pandemics
include = ifelse(((Week >= 15 & Week <= 26) |
(Week >= 36 & Week <= 45)) &
(Year != 2020 & Year != 2009),
1, 0))
skip_to_next <- F
# c <- "Canada"
# s <- "b"
# a <- "All"
ym <- 2010
cts <- unique(db2$Region)
cts <- c("Canada", "Ontario", "Quebec")
cts <- c("British Columbia", "Alberta", "Canada", "Ontario", "Quebec")
sxs <- unique(db2$Sex)
ags <- unique(db2$Age)
db_all_blns <- NULL
for (c in cts) {
for (s in sxs) {
for (a in ags) {
temp <- db2 %>%
filter(Region == c,
Sex == s,
Age == a,
Year >= ym)
cat(paste(c, s, a, "\n", sep = "_"))
temp2 <- fit_baseline(temp)
db_all_blns <- db_all_blns %>%
bind_rows(temp2)
}
}
}
for (i in pkgs){
if (!(i %in% rownames(installed.packages()))){
install.packages(i)
}
}
lapply(pkgs, require, character.only = T)
select <- dplyr::select
registerDoParallel(cores = 4)
source("Code/00_functions.R")
# reading mortality and population data from StatCan files
db <- read_rds("Output/weekly_canada.rds")
# database for baseline estimation
db2 <- db %>%
mutate(Deaths = Deaths + 1) %>%
group_by(Year, Region, Age, Sex) %>%
mutate(Week = 1:n()) %>%
ungroup() %>%
arrange(Region, Age, Sex, Year) %>%
group_by(Region, Age, Sex) %>%
mutate(t = 1:n()) %>%
ungroup() %>%
mutate(sn52 = sin((2*pi*t)/(52)),
cs52 = cos((2*pi*t)/(52)),
# excluding winter (wks 46-14), summer (wks 27-35), 2009 and COVID-19 pandemics
include = ifelse(((Week >= 15 & Week <= 26) |
(Week >= 36 & Week <= 45)) &
(Year != 2020 & Year != 2009),
1, 0))
skip_to_next <- F
# c <- "Canada"
# s <- "b"
# a <- "All"
ym <- 2010
cts <- unique(db2$Region)
cts <- c("Canada", "Ontario", "Quebec")
cts <- c("British Columbia", "Alberta", "Canada", "Ontario", "Quebec")
sxs <- unique(db2$Sex)
ags <- unique(db2$Age)
db_all_blns <- NULL
for (c in cts) {
for (s in sxs) {
for (a in ags) {
temp <- db2 %>%
filter(Region == c,
Sex == s,
Age == a,
Year >= ym)
cat(paste(c, s, a, "\n", sep = "_"))
temp2 <- fit_baseline(temp)
db_all_blns <- db_all_blns %>%
bind_rows(temp2)
}
}
}
#########################
# appending all estimates
#########################
# db_all <- NULL
# getwd()
#
# temp = list.files("Data_output/single_ests/", pattern="*.csv")
#
# length(temp)
# # i <- 1
# for (i in 1:length(temp)) {
#   db_temp <- read_csv(paste0("Data_output/single_ests/", temp[i])) %>%
#     as_tibble() %>%
#     mutate(Sex = as.character(Sex),
#            Sex = ifelse(Sex == "FALSE", "f", Sex))
#   db_all <- bind_rows(db_all, db_temp)
# }
#
# detach(package:MASS)
#
write_csv(db_all_blns, path = paste0("Output/baseline_mortality_", ym, ".csv"))
>>>>>>> 71d0e534802900a4818bcc1c37b5fab8da09cba7
rm(list=ls())
Sys.setenv(LANG = "en")
Sys.setlocale("LC_ALL","English")
library(tidyverse)
library(lubridate)
library(readxl)
source("Code/00_functions.R")
# provisionally, only for the main provinces and national
# reading mortality and population data from StatCan files
deaths <- read_csv("Data/201113_13100768-eng.zip",
col_types = cols(.default = "c"))
qc <- read_csv2("Data/DecesSemaine_QC_2010-2020_GrAge.csv",
skip = 5) %>%
rename(Year = 1,
Age = 3) %>%
drop_na(Age) %>%
select(-Statut)
pop <- read_csv("Data/17100005-eng.zip",
col_types = cols(.default = "c"))
# adjusting mortality data
###########################
deaths2 <- deaths %>%
rename(Region = GEO,
Date = REF_DATE,
Age = 'Age at time of death',
Deaths = VALUE) %>%
select(Region, Date, Age, Sex, Deaths) %>%
mutate(Region = str_remove(Region, ", place of occurrence"),
Date = ymd(Date),
Age = str_remove(Age, "Age at time of death, "),
Age = str_trim(str_sub(Age, 1, 2)),
Age = ifelse(Age == "al", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Year = year(Date),
Deaths = as.integer(Deaths))
unique(deaths2$Age)
unique(deaths2$Region)
r <- "Quebec"
a <- "85"
deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b") %>%
ggplot()+
geom_line(aes(Date, Deaths))
# weeks and dates
#################
weeks <- expand_grid(Year = seq(2010, 2020, 1), Week = seq(1, 52, 1)) %>%
bind_rows(tibble(Year = c(2014, 2020), Week = 53)) %>%
arrange(Year, Week)
# weeks dates before 2020
dates_w <- deaths2 %>%
filter(Region == r,
Age == a,
Sex == "b",
Date < "2020-01-04") %>%
select(Date)
# week 1 2020
first_date_w_2020 <- ymd("2020-01-04")
dates_w2 <- dates_w %>%
bind_rows(tibble(Date = first_date_w_2020 + 7 * seq(0, 52, 1)))
weeks2 <- bind_cols(dates_w2, weeks) %>%
mutate(t = 1:n())
# Quebec data
qc2 <- qc %>%
gather(-Year, -Age, key = "Week", value = "Deaths") %>%
mutate(Age = str_sub(Age, 1, 2),
Age = case_when(Age == "0-" ~ "0",
Age == "To" ~ "All",
TRUE ~ Age),
Deaths = as.integer(str_replace(Deaths, " ", "")),
Year = as.integer(Year),
Week = as.integer(Week),
Region = "Quebec_isq",
Sex = "b") %>%
arrange(Age, Year, Week) %>%
drop_na() %>%
left_join(weeks2)
deaths3 <- deaths2 %>%
left_join(weeks2)
deaths_all <- bind_rows(deaths3, qc2)
unique(deaths_all$Region)
# adjusting population data
###########################
age_excls <- c("18 years and over",
"65 years and over",
"90 years and over",
"Median age",
"Average age")
pop2 <- pop %>%
rename(Region = GEO,
Year = REF_DATE,
Age = 'Age group',
Exposure = VALUE) %>%
select(Region, Year, Age, Sex, Exposure) %>%
filter(!str_detect(Age, " to "),
!(Age %in% age_excls),
Year >= 2009) %>%
mutate(Age = str_remove_all(Age, c(" years and over| years| year")),
Age = ifelse(Age == "All ages", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Exposure = as.integer(Exposure),
Year = as.integer(Year),
Week = 26) %>%
left_join(weeks2) %>%
mutate(t = ifelse(Year == 2009, -26, t))
# population weekly interpolation
ages <- unique(pop2$Age)
rgs <- unique(pop2$Region)
rgs <- c("British Columbia", "Alberta", "Canada", "Ontario", "Quebec")
# r <- "Canada"
# s <- "f"
# a <- "50"
inters_pop <- NULL
# rgs <- "Canada"
for(r in rgs){
for(s in c("m", "f", "b")){
for(a in ages){
db_w_temp <- pop2 %>%
filter(Region == r,
Sex == s,
Age == a)
db_w_temp2 <- weeks2 %>%
left_join(interpop(db_w_temp)) %>%
mutate(Region = r,
Age = a,
Sex = s)
inters_pop <- inters_pop %>%
bind_rows(db_w_temp2)
}
}
}
unique(inters_pop$Region)
unique(pop2$Region)
# Visual test
#############
# r <- "Alberta"
# a <- "50"
# s <- "f"
#
# orig <- pop2 %>%
#   filter(Region == r,
#          Age == a,
#          Sex == s) %>%
#   left_join(weeks2) %>%
#   mutate(Source = "Original")
#
# inter <- inters_pop %>%
#   filter(Region == r,
#          Age == a,
#          Sex == s,
#          Week != 27) %>%
#   mutate(Source = "Interpolation",
#          Age = as.character(Age))
#
# ggplot()+
#   geom_line(data = inter, aes(t, Exposure), col = "red", alpha = 0.6)+
#   geom_point(data = orig, aes(t, Exposure), col = "black")
############################################
# population by age for Canada data
pop3 <- inters_pop %>%
filter(Age != "All") %>%
mutate(Age = as.integer(Age),
Age_gr = case_when(Age <= 44 ~ "0",
Age >= 45 & Age <= 64 ~ "45",
Age >= 65 & Age <= 84 ~ "65",
Age >= 85 ~ "85")) %>%
group_by(Region, Date, Year, Week, t, Sex, Age_gr) %>%
summarise(Exposure = sum(Exposure)) %>%
ungroup() %>%
rename(Age = Age_gr) %>%
bind_rows(inters_pop %>%
filter(Age == "All"))
unique(pop3$Age)
unique(pop3$Region)
# r <- "Alberta"
# a <- "85"
#
# pop3 %>%
#   filter(Region == r,
#          Age == a,
#          Sex == "b") %>%
#   ggplot()+
#   geom_line(aes(Year, Exposure))
# population by age for Quebec data
pop4 <- inters_pop %>%
filter(Age != "All",
Region == "Quebec") %>%
mutate(Age = as.integer(Age),
Age_gr = case_when(Age <= 49 ~ "0",
Age >= 50 & Age <= 69 ~ "50",
Age >= 70 ~ "70")) %>%
group_by(Region, Date, Year, Week, t, Sex, Age_gr) %>%
summarise(Exposure = sum(Exposure)) %>%
ungroup() %>%
rename(Age = Age_gr) %>%
bind_rows(inters_pop %>%
filter(Age == "All",
Region == "Quebec")) %>%
mutate(Region = "Quebec_isq")
View(pop4)
table(pop4$Age)
pop_all <- bind_rows(pop3, pop4)
db_canada <- deaths_all %>%
left_join(pop_all) %>%
arrange(Region, Age, Sex, t)
write_rds(db_canada, "Output/weekly_canada.rds")
rm(list=ls())
Sys.setenv(LANG = "en")
Sys.setlocale("LC_ALL","English")
pkgs <- c("tidyverse",
"lubridate",
"haven",
"readxl",
"stats",
"splines",
"MASS",
"gnm",
'doParallel',
'foreach')
lapply(pkgs, require, character.only = T)
select <- dplyr::select
registerDoParallel(cores = 4)
source("Code/00_functions.R")
# reading mortality and population data from StatCan files
db <- read_rds("Output/weekly_canada.rds")
# definition of flu seasons and heat waves in Canada
####################################################
# Euromomo definition
exc_type <- "emomo"
flu_season <- c(seq(1, 14, 1), seq(46, 54, 1))
heat_waves <- seq(27, 35, 1)
# option 2 definition
exc_type <- "long_flu"
flu_season <- c(seq(1, 18, 1), seq(42, 54, 1))
heat_waves <- 0
# Initial year for baseline estimation
######################################
ym <- 2010
# database for baseline estimation
##################################
db2 <- db %>%
mutate(sn52 = sin((2*pi*t)/(52)),
cs52 = cos((2*pi*t)/(52)),
# excluding winter (wks 46-14), summer (wks 27-35), 2009 and COVID-19 pandemics
include = ifelse(!(Week %in% heat_waves | Week %in% flu_season) &
(Year != 2020 & Year != 2009),
1, 0))
# skip_to_next <- F
# Testing single populations
############################
c <- "Quebec_isq"
s <- "b"
a <- "All"
temp <- db2 %>%
filter(Region == c,
Sex == s,
Age == a,
Year >= ym)
test <- fit_baseline(temp)
test %>%
ggplot()+
geom_line(aes(Date, Deaths))+
geom_ribbon(aes(Date, ymin = lp, ymax = up), fill = "#2ca25f", alpha = 0.3)+
geom_line(aes(Date, Baseline), col = "#2ca25f", alpha = 0.9)+
labs(title=paste0(c, "_", s, "_", a))+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
plot.title = element_text(size=13),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=11),
axis.title.y = element_text(size=11))
a <- "50"
temp <- db2 %>%
filter(Region == c,
Sex == s,
Age == a,
Year >= ym)
test <- fit_baseline(temp)
test %>%
ggplot()+
geom_line(aes(Date, Deaths))+
geom_ribbon(aes(Date, ymin = lp, ymax = up), fill = "#2ca25f", alpha = 0.3)+
geom_line(aes(Date, Baseline), col = "#2ca25f", alpha = 0.9)+
labs(title=paste0(c, "_", s, "_", a))+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
plot.title = element_text(size=13),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=11),
axis.title.y = element_text(size=11))
temp2 %>%
ggplot()+
geom_line(aes(Date, Deaths))+
geom_ribbon(aes(Date, ymin = lp, ymax = up), fill = "#01BAEF", alpha = 0.25)+
geom_line(aes(Date, Baseline), col = "#01BAEF", alpha = 0.9, size = 0.6)+
scale_x_date(date_breaks = "1 year", date_minor_breaks = "1 year", date_labels = "%Y")+
labs(title=paste0(c, "_", s, "_", a))+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
plot.title = element_text(size=13),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=11),
axis.title.y = element_text(size=11))+
ggsave(paste0("Figures/baseline_singles/", c, "_", s, "_", a, "_", ym, ".png"), dpi = 300, width = 6, height = 4)
test %>%
ggplot()+
geom_line(aes(Date, Deaths))+
geom_ribbon(aes(Date, ymin = lp, ymax = up), fill = "#01BAEF", alpha = 0.25)+
geom_line(aes(Date, Baseline), col = "#01BAEF", alpha = 0.9, size = 0.6)+
scale_x_date(date_breaks = "1 year", date_minor_breaks = "1 year", date_labels = "%Y")+
labs(title=paste0(c, "_", s, "_", a))+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
plot.title = element_text(size=13),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=11),
axis.title.y = element_text(size=11))
a <- "0"
temp <- db2 %>%
filter(Region == c,
Sex == s,
Age == a,
Year >= ym)
test <- fit_baseline(temp)
test %>%
ggplot()+
geom_line(aes(Date, Deaths))+
geom_ribbon(aes(Date, ymin = lp, ymax = up), fill = "#01BAEF", alpha = 0.25)+
geom_line(aes(Date, Baseline), col = "#01BAEF", alpha = 0.9, size = 0.6)+
scale_x_date(date_breaks = "1 year", date_minor_breaks = "1 year", date_labels = "%Y")+
labs(title=paste0(c, "_", s, "_", a))+
theme_bw()+
theme(
panel.grid.minor = element_blank(),
plot.title = element_text(size=13),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=11),
axis.title.y = element_text(size=11))
# Fitting all regions, sexes, and ages in Canada
################################################
cts <- unique(db2$Region)
cts <- c("Canada", "Ontario", "Quebec")
cts <- c("British Columbia", "Alberta", "Canada", "Ontario", "Quebec")
sxs <- unique(db2$Sex)
db_all_blns <- NULL
rm(list=ls())
Sys.setenv(LANG = "en")
Sys.setlocale("LC_ALL","English")
library(tidyverse)
library(lubridate)
<<<<<<< HEAD
library(readxl)
source("Code/00_functions.R")
# provisionally, only for the main provinces and national
# reading mortality and population data from StatCan files
deaths <- read_csv("Data/201113_13100768-eng.zip",
col_types = cols(.default = "c"))
qc <- read_csv2("Data/DecesSemaine_QC_2010-2020_GrAge.csv",
skip = 5) %>%
rename(Year = 1,
Age = 3) %>%
drop_na(Age) %>%
select(-Statut)
pop <- read_csv("Data/17100005-eng.zip",
col_types = cols(.default = "c"))
# adjusting mortality data
###########################
deaths2 <- deaths %>%
rename(Region = GEO,
Date = REF_DATE,
Age = 'Age at time of death',
Deaths = VALUE) %>%
select(Region, Date, Age, Sex, Deaths) %>%
mutate(Region = str_remove(Region, ", place of occurrence"),
Date = ymd(Date),
Age = str_remove(Age, "Age at time of death, "),
Age = str_trim(str_sub(Age, 1, 2)),
Age = ifelse(Age == "al", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Year = year(Date),
Deaths = as.integer(Deaths))
detach(package:MASS)
qc <- read_csv2("Data/DecesSemaine_QC_2010-2020_GrAge.csv",
skip = 5) %>%
rename(Year = 1,
Age = 3) %>%
drop_na(Age) %>%
select(-Statut)
pop <- read_csv("Data/17100005-eng.zip",
col_types = cols(.default = "c"))
# adjusting mortality data
###########################
deaths2 <- deaths %>%
rename(Region = GEO,
Date = REF_DATE,
Age = 'Age at time of death',
Deaths = VALUE) %>%
select(Region, Date, Age, Sex, Deaths) %>%
mutate(Region = str_remove(Region, ", place of occurrence"),
Date = ymd(Date),
Age = str_remove(Age, "Age at time of death, "),
Age = str_trim(str_sub(Age, 1, 2)),
Age = ifelse(Age == "al", "All", Age),
Sex = case_when(Sex == "Both sexes" ~ "b",
Sex == "Males" ~ "m",
Sex == "Females" ~ "f"),
Year = year(Date),
Deaths = as.integer(Deaths))
View(deaths2)
=======
library(ggplot2)
library(osfr)
db_cov <-  read_csv("https://osf.io/7tnfh/download",
skip = 3,
col_types = "ccccciiddd")
View(db_cov)
# OSF Data - Output_10
osf_retrieve_file("43ucn") %>%
osf_download(path = "Data/", conflicts = "overwrite")
db_cov <-  read_csv("Data/Output_10.zip",
skip = 3,
col_types = "ccccciiddd")
# looking for regions included in COVerAGE-DB
db_cov %>%
filter(Country == "Canada") %>%
mutate(Code = str_replace(Code, Date, ""),
Date = dmy(Date)) %>%
pull(Code) %>%
unique()
unique(db_cov$Region)
# looking for regions included in COVerAGE-DB
can <- db_cov %>%
filter(Country == "Canada") %>%
mutate(Code = str_replace(Code, Date, ""),
Date = dmy(Date)) %>%
pull(Code) %>%
unique()
unique(can$Region)
can
# looking for regions included in COVerAGE-DB
db_cov %>%
filter(Country == "Canada") %>%
mutate(Code = str_replace(Code, Date, ""),
Date = dmy(Date)) %>%
pull(Code) %>%
unique()
# only keeping regions from regional sources
db_prv <- db_cov %>%
filter(Country == "Canada") %>%
mutate(Code = str_replace(Code, Date, ""),
Date = dmy(Date)) %>%
select(-Tests)
unique(db_prv$Region)
unique(db_prv$Code)
unique(db_prv$Sex)
View(db_prv)
db2 <- db_prv %>%
drop_na()
View(db_prv)
View(db2)
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date)
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date) %>%
unique()
db2
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date) %>%
unique() %>%
spread(Region)
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date) %>%
unique() %>%
spread("Region")
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date) %>%
unique() %>%
spread(Region, Date)
View(db2)
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date) %>%
unique() %>%
spread(Date, Region)
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date) %>%
unique()
View(db2)
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date) %>%
unique() %>%
mutate(id = 1) %>%
spread(id, Region)
db2 <- db_prv %>%
drop_na() %>%
select(Region, Date) %>%
unique() %>%
mutate(id = 1) %>%
spread(Region, id)
>>>>>>> 5c22cb4f2e81465712561b010aee1e8f8f06f81c
>>>>>>> 71d0e534802900a4818bcc1c37b5fab8da09cba7
